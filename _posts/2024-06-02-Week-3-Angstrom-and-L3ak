---
layout: post
title: "The Summer of Challs: Week 3"
date: 2024-06-02
categories: CTFs
---

This week I tried out a couple of challenges from L3akCTF and AngstromCTF. While they were mostly web again, I tried my first rev as well. Overall, most of the chllenges felt slightly more advanced in terms of difficulty. 

## SIMPLE CALCULATOR - L3AKCTF (Web)

The challenge tells us to unveil "PHP secrets". We are taken to a blank screen that just shows the text "Result:". 

![SimpleCalc](/assets/SimpleCalculatorBlank.jpg)

After playing with the web app and skimming the source code, I figured out that I could make requests like this: `https://challenge_url/?formula=7*7`, and `Result: 49` would be displayed on the page. 

This immediately led me to think of some sort of Remote Code Execution (RCE) vulnerability through bypassing some PHP technicalities/fiters, given the challenge hint. However, it is quite difficult to input any statement through the `formula` query string. The source code contains a regex filter that doesn't allow any letters to be passed in, and it also blocks the single (') and double (") quote characters.

Within the source code files lies a flag.txt file. The name of the file is created through some hashing which is impossible to guess. We clearly need to put some code in the query string that the server will then execute to see the available files in the working directory to see what the flag file is called - from there, we can simply access it with a get request: `https://challenge_url/name_of_flag_file`.

We can do this with some special PHP syntax, as well as encoding letters into octal numbering. The specific code I decided to execute was 

```PHP
shell_exec('ls')
```

It will be difficult to work with both the parenthesis here as well as the single quotes, so we can take advantage of the fact that php functions can both be executed in the form of `shell_exec('ls')` OR `("shell_exec")("ls")`. 
